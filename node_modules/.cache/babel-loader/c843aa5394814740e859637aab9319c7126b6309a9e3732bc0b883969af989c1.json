{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/idang/Documents/assignment3_3-205814999_315786798-master/assignment3_3-205814999_315786798-master/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"C:/Users/idang/Documents/assignment3_3-205814999_315786798-master/assignment3_3-205814999_315786798-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"C:/Users/idang/Documents/assignment3_3-205814999_315786798-master/assignment3_3-205814999_315786798-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/idang/Documents/assignment3_3-205814999_315786798-master/assignment3_3-205814999_315786798-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Console } from \"console\";\nimport countries from \"../assets/countries\";\nimport { required, minLength, maxLength, alpha, sameAs, email } from \"vuelidate/lib/validators\";\nexport default {\n  name: \"Register\",\n  data: function data() {\n    return {\n      form: {\n        username: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        country: null,\n        password: \"\",\n        confirmedPassword: \"\",\n        email: \"\",\n        submitError: undefined\n      },\n      countries: [{\n        value: null,\n        text: \"\",\n        disabled: true\n      }],\n      errors: [],\n      validated: false\n    };\n  },\n  validations: {\n    form: {\n      username: {\n        required: required,\n        length: function length(u) {\n          return minLength(3)(u) && maxLength(8)(u);\n        },\n        alpha: alpha\n      },\n      firstName: {\n        required: required\n      },\n      lastName: {\n        required: required\n      },\n      country: {\n        required: required\n      },\n      password: {\n        required: required,\n        length: function length(p) {\n          return minLength(5)(p) && maxLength(10)(p);\n        }\n      },\n      confirmedPassword: {\n        required: required,\n        sameAsPassword: sameAs(\"password\")\n      },\n      email: {\n        required: required\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this$countries;\n    // console.log(\"mounted\");\n    (_this$countries = this.countries).push.apply(_this$countries, _toConsumableArray(countries));\n    // console.log($v);\n  },\n\n  methods: {\n    validateState: function validateState(param) {\n      var _this$$v$form$param = this.$v.form[param],\n        $dirty = _this$$v$form$param.$dirty,\n        $error = _this$$v$form$param.$error;\n      return $dirty ? !$error : null;\n    },\n    Register: function Register() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this$axios$post, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.axios.post(\n              // \"https://test-for-3-2.herokuapp.com/user/Register\",\n              _this.$root.store.server_domain + \"/Register\", (_this$axios$post = {\n                username: _this.form.username,\n                password: _this.form.firstName\n              }, _defineProperty(_this$axios$post, \"username\", _this.form.lastName), _defineProperty(_this$axios$post, \"password\", _this.form.country), _defineProperty(_this$axios$post, \"username\", _this.form.password), _defineProperty(_this$axios$post, \"username\", _this.form.email), _this$axios$post));\n            case 3:\n              response = _context.sent;\n              _this.$router.push(\"/login\");\n              // console.log(response);\n              _context.next = 11;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.response);\n              _this.form.submitError = _context.t0.response.data.message;\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    onRegister: function onRegister() {\n      // console.log(\"register method called\");\n      this.$v.form.$touch();\n      if (this.$v.form.$anyError) {\n        return;\n      }\n      // console.log(\"register method go\");\n      this.Register();\n    },\n    onReset: function onReset() {\n      var _this2 = this;\n      this.form = {\n        username: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        country: null,\n        password: \"\",\n        confirmedPassword: \"\",\n        email: \"\"\n      };\n      this.$nextTick(function () {\n        _this2.$v.$reset();\n      });\n    }\n  }\n};","map":{"version":3,"names":["Console","countries","required","minLength","maxLength","alpha","sameAs","email","name","data","form","username","firstName","lastName","country","password","confirmedPassword","submitError","undefined","value","text","disabled","errors","validated","validations","length","u","p","sameAsPassword","mounted","_this$countries","push","apply","_toConsumableArray","methods","validateState","param","_this$$v$form$param","$v","$dirty","$error","Register","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$axios$post","response","wrap","_callee$","_context","prev","next","axios","post","$root","store","server_domain","_defineProperty","sent","$router","t0","console","log","message","stop","onRegister","$touch","$anyError","onReset","_this2","$nextTick","$reset"],"sources":["src/pages/RegisterPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"title\">Register</h1>\n    <b-form @submit.prevent=\"onRegister\" @reset.prevent=\"onReset\">\n\n      <b-form-group\n        id=\"input-group-username\"\n        label-cols-sm=\"3\"\n        label=\"Username:\"\n        label-for=\"username\"\n      >\n        <b-form-input\n          id=\"username\"\n          v-model=\"$v.form.username.$model\"\n          type=\"text\"\n          :state=\"validateState('username')\"\n        ></b-form-input>\n        <b-form-invalid-feedback v-if=\"!$v.form.username.required\">\n          Username is required\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback v-else-if=\"!$v.form.username.length\">\n          Username length should be between 3-8 characters long\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback v-if=\"!$v.form.username.alpha\">\n          Username alpha\n        </b-form-invalid-feedback>\n      </b-form-group>\n\n\n\n      <b-form-group\n        id=\"input-group-firstName\"\n        label-cols-sm=\"3\"\n        label=\"firstName:\"\n        label-for=\"firstName\"\n      >\n        <b-form-input\n          id=\"firstName\"\n          v-model=\"$v.form.firstName.$model\"\n          type=\"text\"\n          :state=\"validateState('firstName')\"\n        ></b-form-input>\n        <!-- <b-form-invalid-feedback v-if=\"!$v.form.firstName.required\">\n          firstName is required\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback v-else-if=\"!$v.form.firstName.length\">\n          firstName length should be between 3-8 characters long\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback v-if=\"!$v.form.firstName.alpha\">\n          firstName alpha\n        </b-form-invalid-feedback> -->\n      </b-form-group>\n\n\n\n      <b-form-group\n        id=\"input-group-lastName\"\n        label-cols-sm=\"3\"\n        label=\"lastName:\"\n        label-for=\"lastName\"\n      >\n        <b-form-input\n          id=\"lastName\"\n          v-model=\"$v.form.lastName.$model\"\n          type=\"text\"\n          :state=\"validateState('lastName')\"\n        ></b-form-input>\n        <!-- <b-form-invalid-feedback v-if=\"!$v.form.lastName.required\">\n          lastName is required\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback v-else-if=\"!$v.form.lastName.length\">\n          lastName length should be between 3-8 characters long\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback v-if=\"!$v.form.lastName.alpha\">\n          lastName alpha\n        </b-form-invalid-feedback> -->\n      </b-form-group>\n\n      \n\n\n      <b-form-group\n        id=\"input-group-country\"\n        label-cols-sm=\"3\"\n        label=\"Country:\"\n        label-for=\"country\"\n      >\n        <b-form-select\n          id=\"country\"\n          v-model=\"$v.form.country.$model\"\n          :options=\"countries\"\n          :state=\"validateState('country')\"\n        ></b-form-select>\n        <b-form-invalid-feedback>\n          Country is required\n        </b-form-invalid-feedback>\n      </b-form-group>\n\n\n\n      <b-form-group\n        id=\"input-group-Password\"\n        label-cols-sm=\"3\"\n        label=\"Password:\"\n        label-for=\"password\"\n      >\n        <b-form-input\n          id=\"password\"\n          type=\"password\"\n          v-model=\"$v.form.password.$model\"\n          :state=\"validateState('password')\"\n        ></b-form-input>\n        <b-form-invalid-feedback v-if=\"!$v.form.password.required\">\n          Password is required\n        </b-form-invalid-feedback>\n        <b-form-text v-else-if=\"$v.form.password.$error\" text-variant=\"info\">\n          Your password should be <strong>strong</strong>. <br />\n          For that, your password should be also:\n        </b-form-text>\n        <b-form-invalid-feedback\n          v-if=\"$v.form.password.required && !$v.form.password.length\"\n        >\n          Have length between 5-10 characters long\n        </b-form-invalid-feedback>\n      </b-form-group>\n\n\n\n\n      <b-form-group\n        id=\"input-group-confirmedPassword\"\n        label-cols-sm=\"3\"\n        label=\"Confirm Password:\"\n        label-for=\"confirmedPassword\"\n      >\n        <b-form-input\n          id=\"confirmedPassword\"\n          type=\"password\"\n          v-model=\"$v.form.confirmedPassword.$model\"\n          :state=\"validateState('confirmedPassword')\"\n        ></b-form-input>\n        <b-form-invalid-feedback v-if=\"!$v.form.confirmedPassword.required\">\n          Password confirmation is required\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback\n          v-else-if=\"!$v.form.confirmedPassword.sameAsPassword\"\n        >\n          The confirmed password is not equal to the original password\n        </b-form-invalid-feedback>\n      </b-form-group>\n\n\n\n      <b-form-group\n        id=\"input-group-email\"\n        label-cols-sm=\"3\"\n        label=\"email:\"\n        label-for=\"email\"\n      >\n        <b-form-input\n          id=\"email\"\n          v-model=\"$v.form.email.$model\"\n          type=\"text\"\n          :state=\"validateState('email')\"\n        ></b-form-input>\n        <!-- <b-form-invalid-feedback v-if=\"!$v.form.firstName.required\">\n          firstName is required\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback v-else-if=\"!$v.form.firstName.length\">\n          firstName length should be between 3-8 characters long\n        </b-form-invalid-feedback>\n        <b-form-invalid-feedback v-if=\"!$v.form.firstName.alpha\">\n          firstName alpha\n        </b-form-invalid-feedback> -->\n      </b-form-group>\n\n\n\n\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n      <b-button\n        type=\"submit\"\n        variant=\"primary\"\n        style=\"width:250px;\"\n        class=\"ml-5 w-75\"\n        >Register</b-button\n      >\n      <div class=\"mt-2\">\n        You have an account already?\n        <router-link to=\"login\"> Log in here</router-link>\n      </div>\n    </b-form>\n    <b-alert\n      class=\"mt-2\"\n      v-if=\"form.submitError\"\n      variant=\"warning\"\n      dismissible\n      show\n    >\n      Register failed: {{ form.submitError }}\n    </b-alert>\n    <!-- <b-card class=\"mt-3 md-3\" header=\"Form Data Result\">\n      <pre class=\"m-0\"><strong>form:</strong> {{ form }}</pre>\n      <pre class=\"m-0\"><strong>$v.form:</strong> {{ $v.form }}</pre>\n    </b-card> -->\n  </div>\n</template>\n\n<script>\nimport { Console } from \"console\";\nimport countries from \"../assets/countries\";\nimport {\n  required,\n  minLength,\n  maxLength,\n  alpha,\n  sameAs,\n  email\n} from \"vuelidate/lib/validators\";\n\nexport default {\n  name: \"Register\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        country: null,\n        password: \"\",\n        confirmedPassword: \"\",\n        email: \"\",\n        submitError: undefined\n      },\n      countries: [{ value: null, text: \"\", disabled: true }],\n      errors: [],\n      validated: false\n    };\n  },\n  validations: {\n    form: {\n      username: {\n        required,\n        length: (u) => minLength(3)(u) && maxLength(8)(u),\n        alpha\n      },\n      firstName: {\n        required,\n      },\n      lastName: {\n        required,\n      },\n      country: {\n        required\n      },\n      password: {\n        required,\n        length: (p) => minLength(5)(p) && maxLength(10)(p)\n      },\n      confirmedPassword: {\n        required,\n        sameAsPassword: sameAs(\"password\")\n      },\n\n      \n      email: {\n        required\n      }\n\n\n    }\n  },\n  mounted() {\n    // console.log(\"mounted\");\n    this.countries.push(...countries);\n    // console.log($v);\n  },\n  methods: {\n    validateState(param) {\n      const { $dirty, $error } = this.$v.form[param];\n      return $dirty ? !$error : null;\n    },\n    async Register() {\n      try {\n        const response = await this.axios.post(\n          // \"https://test-for-3-2.herokuapp.com/user/Register\",\n          this.$root.store.server_domain + \"/Register\",\n\n          {\n            username: this.form.username,\n            password: this.form.firstName,\n            username: this.form.lastName,\n            password: this.form.country,\n            username: this.form.password,\n            username: this.form.email            \n          }\n        );\n       \n        this.$router.push(\"/login\");\n        // console.log(response);\n      } catch (err) {\n        console.log(err.response);\n        this.form.submitError = err.response.data.message;\n      }\n    },\n    onRegister() {\n      // console.log(\"register method called\");\n      this.$v.form.$touch();\n      if (this.$v.form.$anyError) {\n        return;\n      }\n      // console.log(\"register method go\");\n      this.Register();\n    },\n    onReset() {\n      this.form = {\n        username: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        country: null,\n        password: \"\",\n        confirmedPassword: \"\",\n        email: \"\"\n      };\n      this.$nextTick(() => {\n        this.$v.$reset();\n      });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.container {\n  max-width: 500px;\n}\n</style>\n\n<!-- username: this.form.username,\n            password: this.form.firstName,\n            username: this.form.lastName,\n            password: this.form.country,\n            username: this.form.password,\n            username: this.form.email -->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}